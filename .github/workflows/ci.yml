# Nom du workflow
name: Build and Deploy Angular Application

# √âv√©nement qui d√©clenche le workflow
on:
  push:
    branches: [ "main" ] # Branche sur laquelle le workflow sera ex√©cut√©


# D√©finition des t√¢ches √† ex√©cuter
jobs:
  build-and-deploy: # Nom de la t√¢che
    runs-on: ubuntu-latest # Syst√®me d'exploitation sur lequel la t√¢che sera ex√©cut√©e

    steps: # Liste des √©tapes √† ex√©cuter
      - run: echo "üéâ Le travail a √©t√© automatiquement d√©clench√© par l'√©venement ${{ github.event_name }}."
      - run: echo "üêß Cette t√¢che s'ex√©cute d√©sormais sur un serveur ${{ runner.os }} h√©berg√© par GitHub !"
      - run: echo "üîé Le nom de votre branche est ${{ github.ref }} et votre r√©f√©rentiel est  ${{ github.repository }}."


      - name: Checkout code # Nom de l'√©tape
        uses: actions/checkout@v4 # Action qui clone le d√©p√¥t GitHub sur le runner
      - run: echo "üí° Le d√©p√¥t ${{ github.repository }} a √©t√© clon√© sur le runner."

      - name: Configuration de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Version de Node.js √† utiliser
      - run: npm ci

      - name: Installation d'Angular CLI
        run: npm install -g @angular/cli

      - name: Installation des d√©pendances du projet
        run: npm install

      - name: Construction de l'application Angular
        run: ng build --configuration=production

      - name: D√©ploiement sur le serveur VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_VPS }} # Adresse IP ou nom d'h√¥te du serveur
          username: ${{ secrets.USERNAME_VPS }} # Nom d'utilisateur sur le serveur
          key: ${{ secrets.SSH_PRIVATE_KEY }} # Cl√© SSH priv√©e pour se connecter au serveur, stock√©e en tant que secret GitHub
          port: ${{ secrets.SERVER_PORT }} # Port SSH du serveur
          script: |
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mkdir /var/www/testAngular # Cr√©e le r√©pertoire pour le d√©ploiement
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S rm -rf /var/www/testAngular/* # Supprimer les anciens fichiers
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S scp -r ${{ github.workspace }}/dist/mushroomkingdom/* /var/www/testAngular # Copier les fichiers depuis le workflow vers le serveur
        env:
          SUDO_PASSWORD: ${{ secrets.SUDO_PASSWORD }}


      - run: echo "üçè Le statut de cette t√¢che est ${{ job.status }}."